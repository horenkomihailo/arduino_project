from flask import Flask, request, render_template, abort
import serial
import json
import os

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö IP
with open("config.json") as f:
    config = json.load(f)

ALLOWED_IPS = config["allowed_ips"]

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Arduino
arduino = serial.Serial('/dev/ttyACM0', 9600)

# Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ IP
@app.before_request
def limit_remote_addr():
    ip = request.remote_addr
    if ip not in ALLOWED_IPS:
        print(f"üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–æ—Å—Ç—É–ø–∞: {ip}")
        abort(403)

# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
@app.route("/", methods=["GET"])
def index():
    return render_template("lamp.html")

# POST-–∑–∞–ø—Ä–æ—Å –æ—Ç –∫–Ω–æ–ø–æ–∫
@app.route("/set", methods=["POST"])
def control_led():
    state = request.form.get("state")
    if state in ["0", "1"]:
        arduino.write(state.encode())
        return f"LED set to {state}", 200
    return "Invalid value", 400

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
